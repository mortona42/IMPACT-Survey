<?php
/**
 * Implements hook_block_info().
 */
function data_entry_block_info() {
  $blocks['paper_survey_instructions'] = array(
    'info' => t('Paper Survey Instructions'), 
    'cache' => DRUPAL_NO_CACHE,
    'status' => TRUE,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => "profile-survey_fielding\nprofile-survey_fielding/*"
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function data_entry_block_configure($delta = '') {
  $form = array();
  if($delta = 'paper_survey_instructions') {
    $form['incomplete_forms'] = array(
      '#type' => 'textarea', 
      '#title' => t('Incomplete Forms'), 
      '#default_value' => variable_get('data_entry_incomplete_forms', "If you choose to administer paper surveys, you will have to manually enter the data. You'll get a link to a data entry form, which you can forward to your individual branches."),
     );
    $form['not_selected'] = array(
      '#type' => 'textarea', 
      '#title' => t('Not Selected'), 
      '#default_value' => variable_get('data_entry_not_selected', "If you choose to administer paper surveys, you will have to manually enter the data. You'll get a link to a data entry form, which you can forward to your individual branches."),
    );
    $form['before_start'] = array(
      '#type' => 'textarea', 
      '#title' => t('Before Start'), 
      '#default_value' => variable_get('data_entry_before_start', '<a href="http://impactsurvey.org/dataentry/?fscs=[current-user:profile-library-registration:field-library-reg-system]>Your paper survey data entry link</a>'),
    );
    $form['in_progress'] = array(
      '#type' => 'textarea', 
      '#title' => t('In Progress'), 
      '#default_value' => variable_get('data_entry_in_progress', '<a href="http://impactsurvey.org/dataentry/?fscs=[current-user:profile-library-registration:field-library-reg-system]">Your paper survey data entry link</a>'),
    );
    $form['extend_dates'] = array(
      '#type' => 'textarea', 
      '#title' => t('Extend Dates'), 
      '#default_value' => variable_get('data_entry_extend_dates', '<a href="http://impactsurvey.org/dataentry/?fscs=[current-user:profile-library-registration:field-library-reg-system]">Your paper survey data entry link</a>'),
    );
    $form['after_ended'] = array(
      '#type' => 'textarea', 
      '#title' => t('After ended'), 
      '#default_value' => variable_get('data_entry_after_ended', '<a href="http://impactsurvey.org/dataentry/?fscs=[current-user:profile-library-registration:field-library-reg-system]">Your paper survey data entry link</a>'),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function data_entry_block_save($delta = '', $edit = array()) {
  if ($delta == 'paper_survey_instructions') {
    variable_set('data_entry_incomplete_forms', $edit['incomplete_forms']);
    variable_set('data_entry_not_selected', $edit['not_selected']);
    variable_set('data_entry_before_start', $edit['before_start']);
    variable_set('data_entry_in_progress', $edit['in_progress']);
    variable_set('data_entry_extend_dates', $edit['extend_dates']);
    variable_set('data_entry_after_ended', $edit['after_ended']);
  }
}

/**
 * Implements hook_block_view().
 */
function data_entry_block_view($delta = '') {
  $block = array();
  if($delta == 'paper_survey_instructions') {
    $block['subject'] = t('Paper Survey Instructions');
    switch(data_entry_situation()) {
      case 'incomplete': 
        $block['content'] = variable_get('data_entry_incomplete_forms', "If you choose to administer paper surveys, you will have to manually enter the data. You'll get a link to a data entry form, which you can forward to your individual branches.");
        break;
      case 'unselected': 
        $block['content'] = variable_get('data_entry_not_selected', "If you choose to administer paper surveys, you will have to manually enter the data. You'll get a link to a data entry form, which you can forward to your individual branches.");
        break;
      case 'unstarted': 
        $block['content'] = variable_get('data_entry_before_start', '<a href="http://impactsurvey.org/dataentry/?fscs=' . impact_util_fscs() . '">Your paper survey data entry link</a>');
        break;
      case 'progress': 
        $block['content'] = variable_get('data_entry_in_progress', '<a href="http://impactsurvey.org/dataentry/?fscs=' . impact_util_fscs() . '">Your paper survey data entry link</a>');
        break;
      case 'extend': 
        $block['content'] = variable_get('data_entry_extend_dates', '<a href="http://impactsurvey.org/dataentry/?fscs=' . impact_util_fscs() . '">Your paper survey data entry link</a>');
        break;
      case 'ended': 
        $block['content'] = variable_get('data_entry_after_ended', '<a href="http://impactsurvey.org/dataentry/?fscs=' . impact_util_fscs() . '">Your paper survey data entry link</a>');
        break;
    }
  }
  return $block;
}
// Hide the paper survey instructions if they are not using them
function data_entry_block_view_data_entry_paper_survey_instructions_alter(&$data, $block) {
  // Are they doing paper surveys?
  global $user;
  $sql = "SELECT field_paper_survey_value FROM {field_data_field_paper_survey} WHERE entity_id = (SELECT pid FROM {profile} WHERE type = 'survey_fielding' AND uid = $user->uid)";
  $paper = db_query($sql)->fetchField();
  
  switch(data_entry_situation()) {
      case 'incomplete':
      case 'unselected':
      case 'extend':
        break;
      case 'unstarted':
      case 'progress':
      case 'ended': 
        if($paper == 0) {
          unset($data['subject']);
          unset($data['content']);
        }
        break;
  }
}
function data_entry_situation() {
  
  global $user;
  
  // Check if IMLS/Intake forms are submitted
  $sql = 'SELECT type FROM {myimpact_profile_status} WHERE uid = :uid';
	$submitted = db_query($sql, array(':uid' => $user->uid))->rowCount();
	if ($submitted < 2) {
	  $situation = 'incomplete';
	}else {
	  $situation = 'unselected';
	}
	
  // Check if survey fielding form has been submitted
	if($submitted >= 2) {
  	$sql = 'SELECT pid FROM {profile} WHERE type = :type AND uid = :uid';
  	$ff = db_query($sql, array(':type' => 'survey_fielding', ':uid' => $user->uid));

  	// If it has been, check dates
  	if($ff->rowCount() > 0) {
  	  
  	  $sql = 'SELECT field_fielding_date_value, field_fielding_date_value2 FROM {field_data_field_fielding_date} WHERE entity_id = :eid';
		  $survey_fielding = db_query($sql, array(':eid' => $ff->fetchField()));
		
		  $fielding_dates = $survey_fielding->fetchAssoc();

		  // Has the survey started yet?
		  if(strtotime($fielding_dates['field_fielding_date_value']) < time()) {
		    // Has the survey ended yet?
		    if(strtotime($fielding_dates['field_fielding_date_value2']) < time()) {
		      $situation = 'ended';
		    } else {
		      $situation = 'progress';
		    }
  	  // Otherwise, it hasn't been started  
		  }else {
  	    $situation = 'unstarted';
  	  }
  	}
	}
	// Are we on the extend form?
	if(arg(2) == 'extend') $situation = 'extend';
	
	return $situation;
}