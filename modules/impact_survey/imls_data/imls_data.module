<?php
// $Id$
/**
 * @file
 *
 * Creates the registration form that libraries must complete in order to complete registration for the survey.
 *
 */
function imls_data_form_profile2_edit_imls_data_form_alter(&$form, &$form_state) {
  // Add link to square feet table
  drupal_add_js(drupal_get_path('module', 'imls_data').'/imls_data.js');
  // Some styling from myimpact_setting.css
  drupal_add_css(drupal_get_path('module', 'myimpact_setting').'/myimpact_setting.css');
  // IMLS_Data style
  drupal_add_css(drupal_get_path('module', 'imls_data').'/imls_data.css');
  
  // Get IMLS Data
  $fscs = token_replace('[current-user:profile-library-registration:field-library-reg-system]');
  $query_system = "SELECT * FROM {library_lookup} WHERE fscs_key = '$fscs'";
  $result_system = db_query($query_system)->fetchObject();
  $imls_data = array (
    'field_legalpop' => $result_system->popu_lsa,
    'field_visits' => $result_system->visits,
    'field_hours' => $result_system->hrs_open,
    'field_sq_ft' => imls_data_calculate_sq_feet($fscs),
    'field_circ' => $result_system->tot_cir,
    'field_expend_tot' => $result_system->tot_op_exp,
    'field_fte' => $result_system->tot_staff,
    'field_terminals' => $result_system->gp_terms,
    'field_pac_uses' => $result_system->pit_usr
  );
  
  // Loop through fields and set table elements in prefix/suffix
  $zebra = 'even';
  foreach($form['profile_imls_data'] as $field => $values) {
    $field_splode = explode('_', $field);
    if($field_splode[0] == 'field') {
      $zebra = ($form['profile_imls_data'][$field]['#weight']%2 == 0) ? 'even' : 'odd';
      $description = isset($form['profile_imls_data'][$field]['und'][0]['value']['#description']) ? '<br><span class="description">' . $form['profile_imls_data'][$field]['und'][0]['value']['#description'] . '</span>' : '';
      $field_prefix = isset($form['profile_imls_data'][$field]['und'][0]['value']['#field_prefix']) ? $form['profile_imls_data'][$field]['und'][0]['value']['#field_prefix'] : '';
      $field_suffix = isset($form['profile_imls_data'][$field]['und'][0]['value']['#field_suffix']) ? $form['profile_imls_data'][$field]['und'][0]['value']['#field_suffix'] : '';
      $form['profile_imls_data'][$field]['und'][0]['value']['#title_display'] = 'none';
      $form['profile_imls_data'][$field]['und'][0]['#prefix'] = '<tr class="' . $zebra . '"><td class="imls-field-name">' . $form['profile_imls_data'][$field]['und'][0]['value']['#title'] . $description . '</td><td class="imls-prev-data">' . $imls_data[$field] . '</td><td class="imls-field-prefix">' . $field_prefix . '</td><td class="imls-current-value">';
      $form['profile_imls_data'][$field]['und'][0]['#suffix'] = '<span class="imls-field-suffix">' . $field_suffix . '</span></td></tr>';
      if(empty($form['profile_imls_data'][$field]['und'][0]['value']['#default_value']))
        $form['profile_imls_data'][$field]['und'][0]['value']['#default_value'] = $imls_data[$field];
      // Unset fields so that they are not rendered again
      unset($form['profile_imls_data'][$field]['und'][0]['value']['#description']);
      unset($form['profile_imls_data'][$field]['und'][0]['value']['#field_prefix']);
      unset($form['profile_imls_data'][$field]['und'][0]['value']['#field_suffix']);
    }
  }
  $form['profile_imls_data']['#prefix'] = '<table class="library_form"><thead><tr><th class="imls-field-name">Field</th><th class="imls-prev-data">2008 IMLS Data</th><th class="imls-field-prefix"></th><th class="imls-current-value">Current Value</th></tr></thead><tbody>';
  $form['profile_imls_data']['#suffix'] = '</tbody></table>';
}
/*
 function imls_data_form_submit($form, &$form_state) {
 drupal_set_message(t('The changes have been saved.'));
 $form_state['redirect'] = 'myimpact';
 }*/
// Calculate sq feet
function imls_data_calculate_sq_feet($fscs) {
  $outlets = db_select('square_feet', 's')
  ->fields('s', array('lib_name', 'sq_feet'))
  ->condition('fscs_key', $fscs)
  ->execute()
  ->fetchAllAssoc('lib_name');

  $sum = 0;
  $error = 0;
  foreach ($outlets as $outlet) {
    if ($outlet->sq_feet == -1) {
      $error = 1;
    } else if ($outlet->sq_feet > 0) {
      $sum += $outlet->sq_feet;
    }
  }
  if ($error > 0) {
    $message = "One or more of your branches is missing square feet values.  <a href='/square_feet' target='_blank' class='square_feet_link'>Click here</a> to edit branch data.";
    drupal_set_message($message, 'warning', FALSE);
    $sum = 0;
  }
  return $sum;
}