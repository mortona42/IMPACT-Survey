<?php
/**
 * Implements hook_menu().
 * 
 * TODO: integrate with imls URLS
 * 
 */
function library_branches_menu() {
  $items = array();

  $items['edit-branches'] = array(
    'title' => 'Edit Branches',
    'description' => 'Edit branches',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('library_branches_edit'),
    'access callback' => TRUE
  );

  $items['profile-imls_data/%/new'] = array(
    'title' => 'New Branch',
    'description' => 'New Branch',
    'page callback' => 'library_branches_new',
    //'page arguments' => array('library_branches_edit'),
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => 2
  );
  
  $items['delete-branch/%/%'] = array(
    'title' => 'Delete Branch',
    'description' => 'Delete Branch',
    'page callback' => 'library_branches_delete',
    'page arguments' => array(1,2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  return $items;
}
function library_branches_delete($fscs, $seq) {
  return "asdf";
}
function library_branches_new($uid) {
	$fscs = impact_util_fscs($uid);
	$output = drupal_get_form('library_branches_edit', $fscs);
	return $output;
}
function library_branches_edit($form, &$form_state, $fscs) {
  $form_state['fscs'] = $fscs;
  drupal_add_js('http://maps.google.com/maps/api/js?sensor=true', 'external');
  drupal_add_js(drupal_get_path('module', 'library_branches') . '/library_branches_map.js', array('type' => 'file', 'scope' => 'footer'));
  drupal_add_css(drupal_get_path('module', 'library_branches') . '/library_branches.css', array('type' => 'file'));
  $branches = library_branches_list_all($fscs);
  $script_loc = base_path() . drupal_get_path('module', 'library_branches') . '/library_branches_map.js';
  $selected_branch = !empty($form_state['values']['select_branch'])
    ? $form_state['values']['select_branch']
    : 'new';
    
  
  $form = array();
  $form['select_branch'] = array(
  	'#type' => 'select',
  	'#title' => 'Select a branch to edit',
  	'#options' => $branches,
    '#default_value' => $selected_branch,
  	'#ajax' => array(
  		'callback' => 'library_branches_replace',
  		'wrapper' => 'happy',
  		'method' => 'replace',
  	),
  );
  $branch_data = !empty($selected_branch) 
    ? library_branches_get_branch($fscs, $selected_branch) 
    : '';
  
  $form['replace'] = array(
  	'#type' => 'container',
    '#prefix' => '<div id="happy">',
    '#suffix' => '</div>',
	  'fscs_key' => array(
	    '#type' => 'hidden',
	  	'#default_value' => $fscs
	  ),
	  'branch_name' => array(
	    '#type' => 'textfield',
	    '#title' => t('Branch Name'),
    	'#default_value' => trim(impact_util_capwords($branch_data['branch_name'])),
	  	'#required' => TRUE
	  ),
	  'address' => array(
		  '#type' => 'textfield',
		  '#title' => t('Address'),
    	'#default_value' => trim($branch_data['address']),
			'#required' => TRUE,
	  ),
	  'address_row' => array(
	  	'#type' => 'container',
	  	'state' => array(
		    '#type' => 'textfield',
	  		'#title' => t('State'),
		    '#default_value' => library_branches_get_state($fscs),
		  	'#disabled' => TRUE,
		  	'#required' => TRUE,
		  	'#size' => 2,
		  ),
	  	'city' => array(
		    '#type' => 'textfield',
		    '#title' => t('City'),
		    '#default_value' => $branch_data['city'],
		  	'#required' => TRUE,
		  	'#size' => 30,
		  ),
	  	'zip' => array(
		    '#type' => 'textfield',
		    '#title' => t('Zip'),
		    '#default_value' => $branch_data['zip'],
		  	'#required' => TRUE,
		  	'#size' => 5,
		  )
	  ),
	  
	  'square_feet' => array(
	    '#type' => 'textfield',
	    '#title' => t('Square Feet'),
		  '#default_value' => $branch_data['square_feet'],
	  	'#required' => TRUE
	  ),
	  'bookmobile' => array(
	  	'#type' => 'checkbox',
	  	'#title' => t('Is this a bookmobile?'),
	  ),
  );
  $form['map'] = array (
	  '#markup' => '<div id="map-instructions">Center the map on your library in order to find the longitude and latitude</div>
		<div id="gmap"></div>'
	);
	$form['location'] = array (
  	'#type' => 'container',
	  'latitude' => array(
      '#type' => 'textfield',
      '#title' => t('Latitude'),
      //'#value' => $branch_data['longitude'],
      '#attributes' => array('id' => array('lat')),
    	'#required' => TRUE,
    	'#size' => 10
    ),
	  'longitude' => array(
	    '#type' => 'textfield',
	    '#title' => t('Longitude'),
	    //'#value' => $branch_data['latitude'],
	    '#attributes' => array('id' => array('lon')),
	  	'#required' => TRUE,
	  	'#size' => 10
	  )
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#submit' => array('library_branches_submit')
  );
  $form['delete'] = array(
    '#type' => 'submit',
    '#value' => 'Delete',
    '#submit' => array('library_branches_delete_submit'),
    // Only validate select_branch
    '#limit_validation_errors' => array(array('select_branch'))
  );
  if(impact_util_form_step() == 'new') {
	  $form['table'] = array(
	    '#markup' => library_branches_verify_branches()
	  );
  }
  
  library_branches_calculate_seq($fscs);
  return $form;
}
function library_branches_edit_validate($form, $form_state) {
	//dpm($form_state);
	//form_set_error('hello');
}
function library_branches_submit($form, $form_state) {
	//dpm($form);
	//dpm($form_state);
	$new = ($form_state['values']['select_branch'] == 'new') ? TRUE : FALSE;
	$sequence = ($new)
	  ? library_branches_calculate_seq($form_state['values']['fscs_key'])
	  : $form_state['values']['select_branch'];
	if($new) {
    $insert = db_insert('imls_out_2009')
  		->fields(array(
  			'fscs_key' => $form_state['values']['fscs_key'],
  			'fscs_seq' => $sequence,
  			'branch_name' => $form_state['values']['branch_name'],
  			'address' => $form_state['values']['address'],
  			'city' => $form_state['values']['city'],
  			'state' => $form_state['values']['state'],
  			'zip' => $form_state['values']['zip'],
  			'latitude' => $form_state['values']['latitude'],
  			'longitude' => $form_state['values']['longitude'],
  			'square_feet' => $form_state['values']['square_feet'],
  		))
  		->execute();
	}
}
function library_branches_delete_submit($form, &$form_state) {
  $sequence = ($form_state['values']['select_branch'] != 'new')
	  ? $form_state['values']['select_branch']
	  : 0;
	$fscs_key = $form_state['fscs'];
	$fscs_seq = $form_state['values']['select_branch'];
	if($sequence > 0) {
    $delete = db_update('imls_out_2009')
      ->fields(array('deleted' => 1))
      ->condition('fscs_key', $fscs_key, '=')
      ->condition('fscs_seq', $fscs_seq, '=')
      ->execute();
    if($delete == 1) drupal_set_message(library_branches_get_name($fscs_key, $fscs_seq) . ' was deleted.', 'status');
    else drupal_set_message('Oops, something went wrong, please contact us', 'error');
      
	}
}
// Subtract number of changes from 9999
function library_branches_calculate_seq($fscs) {
	$sql = "SELECT fscs_seq FROM {imls_out_2009} WHERE fscs_key = '$fscs' ORDER BY fscs_seq DESC";
	$seq_nums = db_query($sql)->fetchCol();
	
	// Find the next available sequence, starting from 9999
	$seq = 9999;
	foreach($seq_nums as $index => $value) {
	  if($value != $seq) return $seq;
	  else $seq--;
	}
	return $seq;
}
function library_branches_verify_branches() {
  return imls_data_verify_branches();
  /*
  $branches = db_query("SELECT * FROM {imls_out_2009} WHERE fscs_key = :fscs ORDER BY lib_name", array(':fscs' => impact_util_fscs()));
  $header = array('Branch Name', 'Address', 'City', 'Zip', 'Square Feet');
  $rows = array();
  
  foreach($branches->fetchAll() as $branch) {
    $sq_feet = ($branch->sq_feet > 0) ? $branch->sq_feet : 'N/A';
    $rows[] = array(
      impact_util_capwords($branch->lib_name),
      impact_util_capwords($branch->address),
      impact_util_capwords($branch->city),
      $branch->zip,
      $sq_feet
    );
  }
  
  $variables = array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array('class' => 'library_form'),
    'caption' => '',
    'colgroups' => array(),
    'sticky' => '',
    'empty' => ''
  );
  
  drupal_set_title('Verify Library Branches');
  $output = '<h3>' . imls_data_num_branches(impact_util_fscs()) . ' Total Branches</h3>';
  $output .= theme('table', $variables);
  return $output;*/
}
function library_branches_list_all($fscs) {
  /*$sql = "SELECT STABR AS state, fscs_key, FSCS_SEQ AS fscs_seq, 
  	lib_name AS branch_name, ADDRESS AS address, CITY AS city, 
  	ZIP AS zip, sq_feet AS square_feet, 
  	LONGITUD AS longitude, LATITUDE AS latitude
 	  FROM {square_feet}
		WHERE fscs_key = '$fscs'
		UNION ALL
		SELECT state, fscs_key, fscs_seq, branch_name, address, city, zip, square_feet, longitude, latitude
		FROM {library_branches_2009_changes}
		WHERE fscs_key = '$fscs'";*/
  $sql = "SELECT fscs_seq, branch_name
 	  FROM {imls_out_2009}
		WHERE fscs_key = '$fscs'
		AND deleted != 1
		ORDER BY branch_name ASC";
		/*UNION ALL
		SELECT fscs_seq, branch_name
		FROM {imls_out_updates}
		WHERE fscs_key = '$fscs'";*/
 
  
  $branches = array('new' => 'New Branch');
  foreach(db_query($sql)->fetchAllKeyed() as $fscs_seq => $branch_name) {
  	$branches[$fscs_seq] = impact_util_capwords($branch_name);
  }
	return $branches;
}
function library_branches_get_branch($fscs, $fscs_seq) {
  $sql = "SELECT state, fscs_key, fscs_seq, branch_name, address, city, zip, longitude, latitude, square_feet
		FROM {imls_out_2009} WHERE fscs_seq = '$fscs_seq' AND fscs_key = '$fscs'";
	/*if($fscs_seq < 5000)
		else 
		$sql = "SELECT fscs_key, fscs_seq, branch_name, address, city, zip, longitude, latitude, square_feet
		FROM {library_branches_2009_changes} WHERE fscs_seq = '$fscs_seq' AND fscs_key = '$fscs'";*/
		
		//$branch = array('new' => 'new');
	//$branch = array_push($branch, db_query($sql)->fetchAssoc());
	return db_query($sql)->fetchAssoc();//$branch;
}
function library_branches_replace(&$form, &$form_state) {
	//$form['replace']['branch_name']['#default_value'] = if(isset())form_state['input']['branch_select'];
	//$form['replace']['branch_name']['#default_value'] = $form_state['values']['select_branch'];
	//$form_state['input']['branch_name'] = $form_state['values']['select_branch'];
	//$form_state['rebuild'] = TRUE;
	return $form['replace'];
}
function library_branches_get_state($fscs) {
  $sql = "SELECT state FROM {imls_out_2009} WHERE fscs_key = '$fscs'";
  return db_query($sql)->fetchField();
}
function library_branches_get_name($fscs_key, $fscs_seq) {
  $sql = "SELECT branch_name FROM {imls_out_2009} WHERE fscs_key = '$fscs_key' AND fscs_seq = '$fscs_seq'";
  return db_query($sql)->fetchField();
}