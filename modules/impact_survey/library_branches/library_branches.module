<?php
/**
 * Implements hook_menu().
 * 
 * TODO: integrate with imls URLS
 * 
 */
function library_branches_menu() {
  $items = array();
  
  $items['profile-imls_data/%/branches'] = array(
    'title' => 'New Branch',
    'description' => 'New Branch',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('library_branches_edit', 1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => 2
  );
  
  return $items;
}
function library_branches_edit($form, &$form_state, $uid) {
  
  unset($form_state['input']);
  
  drupal_add_js('http://maps.google.com/maps/api/js?sensor=true', 'external');
  drupal_add_js(drupal_get_path('module', 'library_branches') . '/library_branches_map.js', array('type' => 'file', 'scope' => 'header'));
  drupal_add_css(drupal_get_path('module', 'library_branches') . '/library_branches.css', array('type' => 'file'));
  drupal_add_css('.library_form td {padding:0 5px;}', array('type' => 'inline'));
  
	$fscs_key = impact_util_fscs($uid);
  $form_state['fscs_key'] = $fscs_key;
	
  // Get the selected branch
  $selected_branch = (isset($form_state['values']['fscs_seq'])) ? $form_state['values']['fscs_seq'] : 0;
  $selected_is_bookmobile = FALSE;
  
  if($selected_branch != 0) {
    $branch_data = library_branches_get_branch($fscs_key, $selected_branch);
    //dpm($branch_data);
    if($branch_data->square_feet <= 0)
      $selected_is_bookmobile = TRUE;
  }
  $branch_name = (isset($branch_data)) ? impact_util_capwords($branch_data['branch_name']) : '';
  
	$form = array();
	
  $form['fscs_seq'] = array(
  	'#type' => 'select',
  	'#title' => 'Select a branch to edit',
  	'#options' => library_branches_branch_list($fscs_key),
  	'#ajax' => array(
  		'callback' => 'library_branches_select_branch_callback'
  	),
  );
  $form['replace'] = array(
    '#type' => 'container',
    '#prefix' => '<div id="replace-wrapper">',
    '#suffix' => '</div>'
  );
  $form['replace']['branch_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Branch Name'),
    '#prefix' => '<div id="branch-name-wrapper">',
    '#suffix' => '</div>',
    '#default_value' => $branch_name,
  	'#required' => TRUE
  );
  $form['replace']['address'] = array(
    '#type' => 'textfield',
    '#title' => t('Address'),
    '#prefix' => '<div id="address-wrapper">',
    '#suffix' => '</div>',
    '#default_value' => (isset($branch_data)) ? impact_util_capwords($branch_data['address']) : '',
  	'#required' => TRUE
  );
  $form['replace']['address_row'] = array(
    '#type' => 'container',
    '#attributes' => array('id' => array('address-row'))
  );
  $form['replace']['address_row']['city'] = array(
    '#type' => 'textfield',
    '#title' => t('City'),
    '#prefix' => '<div id="city-wrapper">',
    '#suffix' => '</div>',
    '#default_value' => (isset($branch_data)) ? impact_util_capwords($branch_data['city']) : '',
  	'#required' => TRUE,
  	'#size' => 20,
  );
  $form['replace']['address_row']['state'] = array(
    '#type' => 'textfield',
    '#title' => t('State'),
    '#prefix' => '<div id="state-wrapper">',
    '#suffix' => '</div>',
    '#value' => library_branches_get_state($fscs_key),
  	'#required' => TRUE,
  	'#size' => 2,
  );
  $form['replace']['address_row']['zip'] = array(
    '#type' => 'textfield',
    '#title' => t('Zip'),
    '#prefix' => '<div id="zip-wrapper">',
    '#suffix' => '</div>',
    '#default_value' => (isset($branch_data)) ? $branch_data['zip'] : '',
  	'#required' => TRUE,
  	'#size' => 5,
  );
  $form['replace']['bookmobile'] = array(
    '#type' => 'checkbox',
    '#title' => t('Bookmobile'),
    '#prefix' => '<div id="bookmobile-wrapper">',
    '#suffix' => '</div>',
    '#default_value' => (isset($form_state['values']['fscs_seq']) && $form_state['values']['fscs_seq'] == 28) ? 1 : 0,
  	'#ajax' => array(
  		'callback' => 'library_branches_bookmobile_callback',
  	),
  );
  $form['replace']['map_area'] = array(
    '#type' => 'container',
    '#prefix' => '<div id="map-area-wrapper">',
    '#suffix' => '</div>',
    '#attributes' => array('id' => array('map-area')),
  );
  $form['replace']['map_area']['map'] = array (
	  '#markup' => '<div id="map-instructions">Center the map on your library in order to find the longitude and latitude</div><div id="gmap"></div>',
    '#prefix' => '<div id="map-wrapper">',
    '#suffix' => '</div>'
	);
  $form['replace']['map_area']['latitude'] = array(
    '#type' => 'textfield',
    '#title' => t('Latitude'),
    '#prefix' => '<div id="latitude-wrapper">',
    '#suffix' => '</div>',
    '#attributes' => array('id' => array('lat')),
    '#default_value' => (isset($branch_data)) ? $branch_data['latitude'] : '',
  	'#required' => TRUE,
    '#size' => 20,
  );
  $form['replace']['map_area']['longitude'] = array(
    '#type' => 'textfield',
    '#title' => t('Longitude'),
    '#prefix' => '<div id="longitude-wrapper">',
    '#suffix' => '</div>',
    '#attributes' => array('id' => array('lon')),
    '#default_value' => (isset($branch_data)) ? $branch_data['longitude'] : '',
  	'#required' => TRUE,
    '#size' => 20,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    //'#submit' => array('library_branches_submit')
  );
  $form['delete'] = array(
    '#type' => 'submit',
    '#value' => 'Delete',
    //'#submit' => array('library_branches_delete_submit'),
    // Only validate select_branch
    //'#limit_validation_errors' => array(array('select_branch'))
  );
  
  $form['table'] = array(
    '#markup' => library_branches_table($fscs_key)
  );
  return $form;
}
function library_branches_select_branch_callback($form, $form_state) {
  dpm($form);
  if(library_branches_is_bookmobile($form_state['fscs_key'], $form_state['values']['fscs_seq'])) {
    $commands[] = ajax_command_remove('#map-wrapper');
    $commands[] = ajax_command_remove('#latitude-wrapper');
    $commands[] = ajax_command_remove('#longitude-wrapper');
    $commands[] = ajax_command_replace('#bookmobile-wrapper', drupal_render($form['replace']['bookmobile']));
  } else {
    $commands[] = ajax_command_replace('#replace-wrapper', drupal_render($form['replace']));
    $commands[] = ajax_command_invoke(NULL, 'loadMap');
  }
  return array('#type' => 'ajax', '#commands' => $commands);
}
function library_branches_bookmobile_callback($form, $form_state) {
  if($form_state['values']['bookmobile'] == 1) {
    $commands[] = ajax_command_remove('#map-wrapper');
    $commands[] = ajax_command_remove('#longitude-wrapper');
    $commands[] = ajax_command_remove('#latitude-wrapper');
  } else {
    $commands[] = ajax_command_replace('#map-area-wrapper', drupal_render($form['replace']['map_area']));
    $commands[] = ajax_command_invoke(NULL, 'loadMap');
  }

  return array('#type' => 'ajax', '#commands' => $commands);
}
function library_branches_edit_validate($form, $form_state) {
  //$fscs_seq = $form_state['values']['fscs_seq'];
  //dd($form_state);
}

function library_branches_submit($form, $form_state) {
  $fscs_seq = $form_state['values']['fscs_seq'];
  dd($form_state);
}
/*
	//dpm($form);
	//dpm($form_state);
	$new = ($form_state['values']['select_branch'] == 'new') ? TRUE : FALSE;
	$sequence = ($new)
	  ? library_branches_calculate_seq($form_state['values']['fscs_key'])
	  : $form_state['values']['select_branch'];
	if($new) {
    $insert = db_insert('imls_out_2009')
  		->fields(array(
  			'fscs_key' => $form_state['values']['fscs_key'],
  			'fscs_seq' => $sequence,
  			'branch_name' => $form_state['values']['branch_name'],
  			'address' => $form_state['values']['address'],
  			'city' => $form_state['values']['city'],
  			'state' => $form_state['values']['state'],
  			'zip' => $form_state['values']['zip'],
  			'latitude' => $form_state['values']['latitude'],
  			'longitude' => $form_state['values']['longitude'],
  			'square_feet' => $form_state['values']['square_feet'],
  		))
  		->execute();
	}
}
*/
/*
function library_branches_delete_submit($form, &$form_state) {
	$fscs_key = $form_state['fscs_key'];
  // Get fscs_seq or 0 for new branch
  $fscs_seq = ($form_state['values']['select_branch'] != 'new')
	  ? $form_state['values']['select_branch']
	  : 0;
	if($fscs_seq > 0) {
    $delete = db_update('imls_out_2009')
      ->fields(array('deleted' => 1))
      ->condition('fscs_key', $fscs_key, '=')
      ->condition('fscs_seq', $fscs_seq, '=')
      ->execute();
    if($delete == 1) drupal_set_message(impact_util_capwords(library_branches_get_name($fscs_key, $fscs_seq)) . ' was deleted.', 'status');
    else drupal_set_message('Oops, something went wrong, please contact us', 'error');
	} else {
	  drupal_set_message('Select the branch you want to delete', 'error');
	}
}
*/
function library_branches_branch_list($fscs_key) {
  $sql = "SELECT fscs_seq, branch_name
 	  FROM {imls_out_2009}
		WHERE fscs_key = '$fscs_key'
		AND deleted != 1
		ORDER BY branch_name ASC";
  $branches = array('new' => 'New Branch');
  foreach(db_query($sql)->fetchAllKeyed() as $fscs_seq => $branch_name) {
  	$branches[$fscs_seq] = impact_util_capwords($branch_name);
  }
	return $branches;
}
function library_branches_get_branch($fscs_key, $fscs_seq) {
  $sql = "SELECT state, fscs_key, fscs_seq, branch_name, address, city, zip, longitude, latitude, square_feet
		FROM {imls_out_2009} WHERE fscs_seq = '$fscs_seq' AND fscs_key = '$fscs_key'";
	return db_query($sql)->fetchAssoc();
}
function library_branches_replace(&$form, &$form_state) {
	return $form['branch_name'];
}
function library_branches_get_state($fscs_key) {
  $sql = "SELECT state FROM {imls_out_2009} WHERE fscs_key = '$fscs_key'";
  return db_query($sql)->fetchField();
}
function library_branches_get_name($fscs_key, $fscs_seq) {
  $sql = "SELECT branch_name FROM {imls_out_2009} WHERE fscs_key = '$fscs_key' AND fscs_seq = '$fscs_seq'";
  return db_query($sql)->fetchField();
}
// Returns a table of branches and bookmobiles for this library
function library_branches_table($fscs_key) {
  $branches = db_query("SELECT branch_name, address, city, zip, square_feet, latitude, longitude FROM {imls_out_2009} WHERE fscs_key = '$fscs_key' AND square_feet > 0 AND deleted != 1 ORDER BY branch_name");
  
  $branch_rows = array();
  foreach($branches->fetchAll() as $branch) {
    //$square_feet = ($branch->square_feet > 0) ? $branch->square_feet : 'N/A';
    $branch_rows[] = array(
      impact_util_capwords($branch->branch_name),
      impact_util_capwords($branch->address),
      impact_util_capwords($branch->city),
      $branch->zip,
      $branch->latitude,
      $branch->longitude
    );
  }
  
  $branch_header = array('Branch Name', 'Address', 'City', 'Zip', 'Latitude', 'Longitude');
  $branch_variables = array(
    'header' => $branch_header,
    'rows' => $branch_rows,
    'attributes' => array('class' => 'library_form'),
    'caption' => '',
    'colgroups' => array(),
    'sticky' => '',
    'empty' => ''
  );
  
  $bookmobiles = db_query("SELECT branch_name, address, city, zip FROM {imls_out_2009} WHERE fscs_key = '$fscs_key' AND square_feet <= 0 AND deleted != 1 ORDER BY branch_name");
  $bm_rows = array();
  foreach($bookmobiles->fetchAll() as $branch) {
    $bm_rows[] = array(
      impact_util_capwords($branch->branch_name),
      impact_util_capwords($branch->address),
      impact_util_capwords($branch->city),
      $branch->zip
    );
  }
  
  $bm_header = array('Branch Name', 'Address', 'City', 'Zip');
  $bm_variables = array(
    'header' => $bm_header,
    'rows' => $bm_rows,
    'attributes' => array('class' => 'library_form'),
    'caption' => '',
    'colgroups' => array(),
    'sticky' => '',
    'empty' => ''
  );
  
  $deleted = db_query("SELECT branch_name, address, city, zip FROM {imls_out_2009} WHERE fscs_key = '$fscs_key' AND deleted = 1 ORDER BY branch_name");
  $deleted_rows = array();
  foreach($deleted->fetchAll() as $branch) {
    $deleted_rows[] = array(
      impact_util_capwords($branch->branch_name),
      impact_util_capwords($branch->address),
      impact_util_capwords($branch->city),
      $branch->zip
    );
  }
  
  $deleted_header = array('Branch Name', 'Address', 'City', 'Zip');
  $deleted_variables = array(
    'header' => $deleted_header,
    'rows' => $deleted_rows,
    'attributes' => array('class' => 'library_form'),
    'caption' => '',
    'colgroups' => array(),
    'sticky' => '',
    'empty' => ''
  );
  
  drupal_set_title('Verify Library Branches');
  $output = '<h3>' . ($branches->rowCount() + $bookmobiles->rowCount()) . ' Total Branches and Bookmobiles </h3>';
  $output .= '<h2>' . $branches->rowCount() . ' Branches </h2>';
  $output .= theme('table', $branch_variables);
  $output .= '<h2>' . $bookmobiles->rowCount() . ' Bookmobiles </h2>';
  $output .= theme('table', $bm_variables);
  $output .= '<h2>' . $deleted->rowCount() . ' Deleted Records </h2>';
  $output .= theme('table', $deleted_variables);
  
  return $output;
}
// Determines whether a branch is a bookmobile
// Returns TRUE or FALSE
function library_branches_is_bookmobile($fscs_key, $fscs_seq) {
  if($fscs_seq == 0)
    return FALSE;
  $sql = "SELECT square_feet FROM {imls_out_2009} WHERE fscs_key ='$fscs_key' AND fscs_seq = '$fscs_seq'";
  $square_feet = db_query($sql)->fetchField();
  //dd($square_feet);
  if($square_feet > 0) {
    //dd('returning FALSE');
    return FALSE;
  }
  else return TRUE;
}