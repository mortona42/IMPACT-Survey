<?php
function intake_form_form_profile2_edit_pilot_intake_form_alter(&$form, &$form_state) {
  if(impact_util_profile_status('pilot_intake')) {
    drupal_set_message('You have already submitted this form. Please contact us if you need to make a change.', 'warning');
    drupal_goto(impact_util_profile_view_url());
  }
  drupal_add_css('div.form_error { border:solid 2px red;}', array('type' => 'inline') );
  
  $form['#validate'][] = 'intake_form_validate';
  
  // Catch and prevent ambiguous "illegal choice" error
  $form['profile_pilot_intake']['field_pilot_intake_connection']['und']['#required'] = FALSE;
  
  // Add form_error class to div
  if(!empty($form_state['input'])) {
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_it_support']))
      $form['profile_pilot_intake']['field_pilot_intake_it_support']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_connection']))
      $form['profile_pilot_intake']['field_pilot_intake_connection']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_assistive']))
      $form['profile_pilot_intake']['field_pilot_intake_assistive']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_wireless']))
      $form['profile_pilot_intake']['field_pilot_intake_wireless']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_session_m']))
      $form['profile_pilot_intake']['field_pilot_intake_session_m']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_staff_learn']))
      $form['profile_pilot_intake']['field_pilot_intake_staff_learn']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_vol_train']))
      $form['profile_pilot_intake']['field_pilot_intake_vol_train']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_one_on_one']))
      $form['profile_pilot_intake']['field_pilot_intake_one_on_one']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_online_safety']))
      $form['profile_pilot_intake']['field_pilot_intake_online_safety']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_strat_plan']))
      $form['profile_pilot_intake']['field_pilot_intake_strat_plan']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_partners']))
      $form['profile_pilot_intake']['field_pilot_intake_partners']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_pat_expense']))
      $form['profile_pilot_intake']['field_pilot_intake_pat_expense']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_hardware']))
      $form['profile_pilot_intake']['field_pilot_intake_hardware']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_extend']))
      $form['profile_pilot_intake']['field_pilot_intake_extend']['#attributes']['class'][] = 'form_error';
    if(!isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_uses']))
      $form['profile_pilot_intake']['field_pilot_intake_uses']['#attributes']['class'][] = 'form_error';
    if(isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_assistive']['und'][0])) {
      if($form_state['input']['profile_pilot_intake']['field_pilot_intake_assistive']['und'][0] == '0') {
        $count = 0;
        foreach($form_state['input']['profile_pilot_intake']['field_pilot_intake_assistive']['und'] as $index => $value) {
          if($value) $count++;
        }
        if($count > 0)
          $form['profile_pilot_intake']['field_pilot_intake_assistive']['#attributes']['class'][] = 'form_error';
      }
    }
    if(isset($form_state['input']['profile_pilot_intake']['field_pilot_intake_uses']['und'][0])) {
      if($form_state['input']['profile_pilot_intake']['field_pilot_intake_uses']['und'][0] == '0') {
        $count = 0;
        foreach($form_state['input']['profile_pilot_intake']['field_pilot_intake_uses']['und'] as $index => $value) {
          if($value) $count++;
        }
        if($count > 0)
          $form['profile_pilot_intake']['field_pilot_intake_uses']['#attributes']['class'][] = 'form_error';
      }
    }
  }
}
function intake_form_validate(&$element, &$form_state) {
  foreach($form_state['input']['profile_pilot_intake'] as $field => $value) {
    if(!isset($value['und'])) {
      switch($field) {
        case 'field_pilot_intake_wireless' :
        	drupal_set_message('Does the library provide wireless Internet? field is required', 'error');
        	break;
        case 'field_pilot_intake_session_m' :
        	drupal_set_message('Does the library use session management software? field is required', 'error');
        	break;
        case 'field_pilot_intake_staff_learn' :
        	drupal_set_message('Does the library provide staff with access to learning resources and opportunities relevant to PAT during working hours? field is required', 'error');
        	break;
        case 'field_pilot_intake_vol_train' :
        	drupal_set_message('Does the library provide public access technology training to volunteers? field is required', 'error');
        	break;
        case 'field_pilot_intake_one_on_one' :
        	drupal_set_message('Does the library offer appointments for one-on-one technology training or help? field is required', 'error');
        	break;
        case 'field_pilot_intake_online_safety' :
        	drupal_set_message('Does the library offer classes about online safety? field is required', 'error');
        	break;
        case 'field_pilot_intake_strat_plan' :
        	drupal_set_message('Does the library include public access technology in its strategic plan? field is required', 'error');
        	break;
        case 'field_pilot_intake_partners' :
        	drupal_set_message('Does the library engage community partners in delivering public access technology services? field is required', 'error');
        	break;
        case 'field_pilot_intake_pat_expense' :
        	drupal_set_message('Does the library have a way to track its expenses related to public access technology service provision? field is required', 'error');
        	break;
        case 'field_pilot_intake_hardware' :
        	drupal_set_message('Does the library have a public access technology hardware replacement plan? field is required', 'error');
        	break;
        case 'field_pilot_intake_extend' :
        	drupal_set_message('Are librarians permitted to extend the session time for patrons? field is required', 'error');
        	break;
        case 'field_pilot_intake_connection' :
        	form_set_error('profile_pilot_intake][field_pilot_intake_connection][und', 'What is the source of the library\'s Internet connection?');
          //drupal_set_message('Are librarians permitted to extend the session time for patrons? field is required', 'error');
        	break;
        case 'field_pilot_intake_assistive' :
          drupal_set_message('Are librarians permitted to extend the session time for patrons? field is required', 'error');
        	break;
      }
    }
  }
  // If 'No' plus another choice is selected, throw an error
  if($form_state['input']['profile_pilot_intake']['field_pilot_intake_assistive']['und'][0] == '0' ) {
    $count = 0;
    foreach($form_state['input']['profile_pilot_intake']['field_pilot_intake_assistive']['und'] as $index => $value) {
      if($value) $count++;
    }
    if($count)
      form_set_error('profile_pilot_intake][field_pilot_intake_assistive][und', 'Does the library provide any of the following assistive technologies to serve people with physical impairments/disabilities? Cannot select "no" when another choice is selected'); 
  }
  if($form_state['input']['profile_pilot_intake']['field_pilot_intake_uses']['und'][0] == '0' ) {
    $count = 0;
    foreach($form_state['input']['profile_pilot_intake']['field_pilot_intake_uses']['und'] as $index => $value) {
      if($value) $count++;
    }
    if($count)
      form_set_error('profile_pilot_intake][field_pilot_intake_uses][und', 'Does the library have dedicated public access Internet terminals for any of the following uses? Cannot select "no" when another choice is selected'); 
  }
}
function intake_form_profile2_view($profile, $view_mode, $langcode) {
  if($profile->type == 'pilot_intake'){
    // If the profile is unsubmitted (and not on confirm), go to edit
    if(isset($profile->content['empty'])
    || !impact_util_profile_status('pilot_intake')
    && impact_util_form_step() != 'confirm') 
      drupal_goto(current_path() . '/edit');
      
    drupal_set_title('Intake Form');
    // Get all the field info for the pilot_intake profile
    $query = "SELECT field_name, data FROM {field_config_instance} WHERE bundle = 'pilot_intake'";
    $fields = db_query($query)->fetchAllKeyed();
    
    $header = array('Field', 'Data');
    $attributes = array('class' => array('library_form'));
    $rows = array();
    foreach($profile->content as $field => $value) {
      $splode = explode('_', $field);
      if($splode[0] == 'field') {
        $weight = unserialize($fields[$field]);
        $rows[$weight['widget']['weight']] = array($profile->content[$field]['#title'], $value[0]['#markup']);
      }
    }
    ksort($rows);
    
    $profile->content = array(0 => array('#markup' => theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => $attributes))));
  }
}

/**
 * Implements hook_block_info().
 */
function intake_form_block_info() {
  $blocks['intake_form_instructions'] = array(
    'info' => t('Intake Form Instructions'), 
    'cache' => DRUPAL_NO_CACHE,
    'weight' => -20,
    'status' => TRUE,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => "profile-pilot_intake/\nprofile-pilot_intake/*"
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function intake_form_block_view($delta = '') {
  $block = array();
  switch($delta) {
    case 'intake_form_instructions':
      $block['subject'] = t('');
      $form_step = impact_util_form_step();
      if($form_step != 'confirm') {
        if(!impact_util_profile_save('pilot_intake'))
          $block['content'] = variable_get('intake_form_instructions', 'Thank you for providing the following information about your library system. By "library system" we mean the library as an administrative entity, which may have a single outlet or multiple outlets. This information will be included in your library\'s report. We recommend gathering this information offline prior to completing and submitting the form below. Download a list of these questions by <a target="blank" href="http://impactsurvey.org/sites/impactsurvey.org/files/docs/IMPACT_Survey_Library_Intake_Form_Questions.pdf">clicking here</a>');
        else
          $block['content'] = variable_get('intake_form_saved_instructions', 'Your form is saved, please submit it when you are finished.');
      } else {
        $block['content'] = '';
      }
      break;
  }
  return $block;
}
/**
 * Implements hook_block_configure().
 */
function intake_form_block_configure($delta = '') {
  $form = array();
  switch($delta) {
    case 'intake_form_instructions':
      $form['instructions'] = array(
        '#type' => 'textarea', 
        '#title' => t('Body'), 
        '#default_value' => variable_get('intake_form_instructions', 'Thank you for providing the following information about your library system. By "library system" we mean the library as an administrative entity, which may have a single outlet or multiple outlets. This information will be included in your library\'s report. We recommend gathering this information offline prior to completing and submitting the form below. Download a list of these questions by <a target="blank" href="http://impactsurvey.org/sites/impactsurvey.org/files/docs/IMPACT_Survey_Library_Intake_Form_Questions.pdf">clicking here</a>'),
      );
      $form['saved'] = array(
        '#type' => 'textarea', 
        '#title' => t('Body'), 
        '#default_value' => variable_get('intake_form_saved_instructions', 'Your form is saved, please submit it when you are finished.'),
      );
      break;
  }
  return $form;
}
/**
 * Implements hook_block_save().
 */
function intake_form_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'intake_form_instructions':
      variable_set('intake_form_instructions', $edit['instructions']);
      variable_set('intake_form_saved_instructions', $edit['saved']);
      break;
  }
}